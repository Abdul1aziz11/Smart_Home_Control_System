syntax = "proto3";  

option go_package = "/genproto";  

// Сообщение, представляющее устройство.  
message Device {  
  string id = 1; 
  string owner_id = 2; 
  string type = 3;
  string name = 4;
  string status = 5;  
  
  // Конфигурационные настройки устройства в виде пар ключ-значение.  
  map<string, string> configurations = 6;  
  
  string last_updated_at = 7;
  string location = 8; 
  string firmware_version = 9; 
  string connectivity = 10; 
}  

// Сообщение, представляющее команду для устройства.  
message Command {  
  string id = 1;
  string device_id = 2;
  string user_id = 3; 
  string type = 4; 
  
  // Данные команды в виде пар ключ-значение.  
  map<string, string> payload = 5;  
  
  string timestamp = 6;
  string status = 7; 
}  

// Сервис для управления устройствами.  
service DeviceService {  
  // Создание нового устройства.  
  rpc CreateDevice(CreateDeviceRequest) returns (Device) {}  
  
  // Получение информации о конкретном устройстве.  
  rpc GetDevice(GetDeviceRequest) returns (Device) {}  
  
  // Обновление данных об устройстве.  
  rpc UpdateDevice(UpdateDeviceRequest) returns (Device) {}  
  
  // Удаление устройства.  
  rpc DeleteDevice(DeleteDeviceRequest) returns (DeleteDeviceResponse) {}  
  
  // Получение списка устройств.  
  rpc ListDevices(ListDevicesRequest) returns (ListDevicesResponse) {}  
  
  // Отправка команды на устройство.  
  rpc SendCommand(Command) returns (CommandResponse) {}  
}  

// Запрос на создание нового устройства.  
message CreateDeviceRequest {  
  Device device = 1;   
}  

// Запрос на получение информации о устройстве.  
message GetDeviceRequest {  
  string id = 1; 
}  

// Запрос на обновление информации об устройстве.  
message UpdateDeviceRequest {  
  Device device = 1;  
}  

// Запрос на удаление устройства.  
message DeleteDeviceRequest {  
  string id = 1; 
}  

// Ответ на запрос о удалении устройства.  
message DeleteDeviceResponse {  
  bool success = 1; 
}  

// Запрос на получение списка устройств.  
message ListDevicesRequest {  
  string user_id = 1; 
  int32 page_size = 2; 
  string page_token = 3;  
}  

// Ответ на запрос списка устройств.  
message ListDevicesResponse {  
  repeated Device devices = 1; 
  string next_page_token = 2; 
}  

// Ответ на команду, отправленную устройству.  
message CommandResponse {  
  string status = 1; 
}