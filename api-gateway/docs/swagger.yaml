basePath: /
definitions:
  handlers.Command:
    properties:
      command_payload:
        additionalProperties:
          type: string
        type: object
      command_type:
        type: string
      device_id:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  handlers.DeleteResp:
    properties:
      success:
        type: string
    type: object
  handlers.Device:
    properties:
      configuration_settings:
        additionalProperties:
          type: string
        type: object
      connectivity_status:
        type: string
      device_id:
        type: string
      device_name:
        type: string
      device_status:
        type: string
      device_type:
        type: string
      firmware_version:
        type: string
      last_updated:
        type: string
      user_id:
        type: string
    type: object
  handlers.DeviceRegister:
    properties:
      connectivity_status:
        type: string
      device_name:
        type: string
      device_status:
        type: string
      device_type:
        type: string
      firmware_version:
        type: string
      location:
        type: string
      user_id:
        type: string
    type: object
  handlers.Profile:
    properties:
      address:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  handlers.RespStatus:
    properties:
      status:
        type: string
    type: object
  handlers.RespStatusUserID:
    properties:
      status:
        type: string
      user_id:
        type: string
    type: object
  handlers.UserProfile:
    properties:
      email:
        type: string
    type: object
  handlers.UserProfileResp:
    properties:
      email:
        type: string
      password_hash:
        type: string
      user_id:
        type: string
    type: object
  handlers.UserRegister:
    properties:
      email:
        type: string
      password:
        type: string
      profile:
        $ref: '#/definitions/handlers.Profile'
      username:
        type: string
    type: object
  handlers.UserRespFull:
    properties:
      email:
        type: string
      status:
        type: string
      token:
        type: string
      user_id:
        type: string
    type: object
  handlers.UserSignIn:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handlers.UserVerify:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: Your API Description
  title: Your API Title
  version: "1.0"
paths:
  /control:
    post:
      consumes:
      - application/json
      description: Send command to control a device
      parameters:
      - description: Command Info
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/handlers.Command'
      - description: User Role
        in: header
        name: X-User-Role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RespStatus'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Control a device
      tags:
      - devices
  /devices:
    post:
      consumes:
      - application/json
      description: Create a new device with the given information
      parameters:
      - description: Device Info
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/handlers.DeviceRegister'
      - description: User Role
        in: header
        name: X-User-Role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Device'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new device
      tags:
      - devices
  /devices/{id}:
    delete:
      description: Delete a device with the given ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: User Role
        in: header
        name: X-User-Role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DeleteResp'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a device
      tags:
      - devices
    get:
      description: Get details of a device with the given ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: User Role
        in: header
        name: X-User-Role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Device'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a device
      tags:
      - devices
    put:
      consumes:
      - application/json
      description: Update a device with the given ID
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: Device Info
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/handlers.DeviceRegister'
      - description: User Role
        in: header
        name: X-User-Role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Device'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Update an existing device
      tags:
      - devices
  /profile:
    get:
      consumes:
      - application/json
      description: Get the profile of an authenticated user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserProfileResp'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserRespFull'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Sign in user
      tags:
      - auth
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RespStatus'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Register a new user
      tags:
      - auth
  /users/verify:
    post:
      consumes:
      - application/json
      description: Verify a user in the system
      parameters:
      - description: User verification info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RespStatusUserID'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Verify user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
